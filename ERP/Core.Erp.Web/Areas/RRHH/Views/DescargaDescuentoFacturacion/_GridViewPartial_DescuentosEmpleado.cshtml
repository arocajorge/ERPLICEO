
@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewPartial_DescuentosEmpleado";
        settings.CallbackRouteValues = new { Controller = "DescargaDescuentoFacturacion", Action = "GridViewPartial_DescuentosEmpleado", Fecha_ini = ViewBag.fecha_ini, Fecha_fin = ViewBag.fecha_fin, IdSucursal = ViewBag.IdSucursal, IdNomina = ViewBag.IdNomina };
        settings.KeyFieldName = "IdTransaccion";
        settings.Width = Unit.Percentage(100);

        settings.CommandColumn.Visible = false;
        settings.CommandColumn.ShowEditButton = false;
        settings.CommandColumn.ShowDeleteButton = false;
        settings.Settings.ShowFooter = true;

        //settings.SettingsContextMenu.Enabled = true;
        //settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        settings.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
        settings.Toolbars.Add(t =>
        {
            t.EnableAdaptivity = true;
            t.Items.Add(GridViewToolbarCommand.ExportToPdf).Text = "Exportar a PDF";
            t.Items.Add(GridViewToolbarCommand.ExportToXls).Text = "Exportar a XLS";
            t.Items.Add(GridViewToolbarCommand.ExportToXlsx).Text = "Exportar a XLSX";
            t.Items.Add(GridViewToolbarCommand.ExportToDocx).Text = "Exportar a DOCX";
            t.Items.Add(GridViewToolbarCommand.ExportToRtf).Text = "Exportar a RTF";
            t.Items.Add(GridViewToolbarCommand.ExportToCsv).Text = "Exportar a CSV";
        });
        settings.SettingsExport.RenderBrick = (sender, e) =>
        {
            if (e.RowType == GridViewRowType.Data && e.VisibleIndex % 2 == 0)
                e.BrickStyle.BackColor = System.Drawing.Color.FromArgb(0xEE, 0xEE, 0xEE);
        };

        settings.Columns.Add(column =>
        {
            column.FieldName = "pe_cedulaRuc";
            column.Caption = "ID";
            column.Width = Unit.Percentage(5);
            column.EditorProperties().TextBox(sp =>
            {
                sp.Width = Unit.Percentage(100);

            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "pe_nombreCompleto";
            column.Caption = "Empleado";
            column.Width = Unit.Percentage(20);
            column.EditorProperties().TextBox(sp =>
            {
                sp.Width = Unit.Percentage(100);

            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "CodigoRubroDescto";
            column.Caption = "Codigo Rubro";
            column.Width = Unit.Percentage(10);
            column.EditorProperties().TextBox(sp =>
            {
                sp.Width = Unit.Percentage(100);

            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Total";
            column.Caption = "Total";
            column.Width = Unit.Percentage(10);
            column.EditorProperties().SpinEdit(sp =>
            {
                sp.MinValue = 0;
                sp.MaxValue = 999999999;
                sp.Width = Unit.Percentage(100);
                column.PropertiesEdit.DisplayFormatString = "{0:n2}";

            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Num_Coutas";
            column.Caption = "Cantidad";
            column.Width = Unit.Percentage(10);
            column.EditorProperties().SpinEdit(sp =>
            {
                sp.MinValue = 0;
                sp.MaxValue = 999999999;
                sp.Width = Unit.Percentage(100);
                column.PropertiesEdit.DisplayFormatString = "{0:n2}";

            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "vt_fecha";
            column.Caption = "Fecha";
            column.Width = Unit.Percentage(10);
            column.EditorProperties().TextBox(sp =>
            {
                sp.Width = Unit.Percentage(100);
                column.PropertiesEdit.DisplayFormatString = "d";

            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "vt_NumFactura";
            column.Caption = "Num Factura";
            column.Width = Unit.Percentage(10);
            column.EditorProperties().TextBox(sp =>
            {
                sp.Width = Unit.Percentage(100);

            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "vt_Observacion";
            column.Caption = "Observación";
            column.Width = Unit.Percentage(20);
            column.EditorProperties().TextBox(sp =>
            {
                sp.Width = Unit.Percentage(100);

            });
        });

        
        //settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Total");
    });

}
@grid.Bind(Model).GetHtml()